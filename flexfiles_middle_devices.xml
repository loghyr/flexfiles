<!-- Copyright (C) The IETF Trust (2014) -->
<!-- Copyright (C) The Internet Society (2014) -->

<section title="Device Addressing and Discovery">
  <t>
    Data operations to a data server require the client to know the
    network address of the data server.  The NFSv4.1 GETDEVICEINFO 
    operation (Section 18.40 of <xref target="RFC5661" />) is
    used by the client to retrieve that information.
  </t>

  <section title="pnfs_ff_device_addr" anchor="pnfs_ff_device_addr">
    <t>
      The pnfs_ff_device_addr data structure is returned by the server
      as the storage protocol specific opaque field da_addr_body in the
      device_addr4 structure by a successful GETDEVICEINFO operation.
    </t>

    <figure>
      <artwork>
/// struct pnfs_ff_device_addr {
///     multipath_list4         pfda_netaddrs;
///     uint32_t                pfda_version;
///     uint32_t                pfda_minorversion;
///     pathname4               pfda_path;
/// };
///
      </artwork>
    </figure>

    <t>
      The pfda_netaddrs field is used to locate the data server.
      It MUST be set by the server to a list holding one or more
      of the device network addresses.
    </t>

    <t>
      The pfda_version and pfda_minorversion represent the NFS
      protocol to be used to access the data server.  This layout
      specification defines the semantics for pfda_versions 3 and
      4.  If pfda_version equals 3 then server MUST set pfda_minorversion
      to 0 and the client MUST access the data server using the
      NFSv3 protocol <xref target="RFC1813" />.  If pfda_version
      equals 4 then the server MUST set pfda_minorversion to either
      0 or 1 and the client MUST access the data server using NFSv4
      <xref target="RFC3530" /> or NFSv4.1 <xref target="RFC5661" />,
      respectively.
    </t>

    <t>
      The pfda_path MAY be set by the server to an exported path
      on the data server for device identification.  If provided,
      the path MUST exist and be accessible to the client.  If the
      path does not exist, the client MUST ignore this device
      information and any layouts referring to the respective
      deviceid until valid device information is acquired.
    </t>
  </section>

  <section title="Data Server Multipathing" anchor="sec:DSM">
    <t>
      The Flexible File Layout Type supports multipathing to multiple
      data server addresses.  Data-server-level multipathing is
      used for bandwidth scaling via trunking and for higher
      availability of use in the case of a data-server failure.
      Multipathing allows the client to switch to another data
      server address which may be that of another data server that
      is exporting the same data stripe unit, without having to
      contact the metadata server for a new layout.
    </t>

    <t>
      To support data server multipathing, pfda_netaddrs contains
      an array of one more data server network addresses.  This
      array (data type multipath_list4) represents a list of data
      servers (each identified by a network address), with the
      possibility that some data servers will appear in the list
      multiple times.
    </t>

    <t>
      The client is free to use any of the network addresses as a
      destination to send data server requests.  If some network
      addresses are less optimal paths to the data than others,
      then the MDS SHOULD NOT include those network addresses in
      pfda_netaddrs.  If less optimal network addresses exist to
      provide failover, the RECOMMENDED method to offer the addresses
      is to provide them in a replacement device-ID-to-device-address
      mapping, or a replacement device ID.  When a client finds no
      response from the data server using all addresses available
      in pfda_netaddrs, it SHOULD send a GETDEVICEINFO to attempt
      to replace the existing device-ID-to-device-address mappings.
      If the MDS detects that all network paths represented by
      pfda_netaddrs are unavailable, the MDS SHOULD send a
      CB_NOTIFY_DEVICEID (if the client has indicated it wants
      device ID notifications for changed device IDs) to change the
      device-ID-to-device-address mappings to the available addresses.
      If the device ID itself will be replaced, the MDS SHOULD
      recall all layouts with the device ID, and thus force the
      client to get new layouts and device ID mappings via LAYOUTGET
      and GETDEVICEINFO.
    </t>

    <t>
      Generally, if two network addresses appear in pfda_netaddrs,
      they will designate the same data server.  When the data server
      is accessed over NFSv4.1 or higher minor version the two data
      server addresses will support the implementation of client ID
      or session trunking (the latter is RECOMMENDED) as defined in
      <xref target="RFC5661" />.  The two data server addresses will
      share the same server owner or major ID of the server owner.
      It is not always necessary for the two data server addresses
      to designate the same server with trunking being used.  For
      example, the data could be read-only, and the data consist of
      exact replicas.
    </t>
  </section>
</section>
